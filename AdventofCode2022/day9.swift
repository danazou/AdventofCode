//
//  day9.swift
//  AdventofCode2022
//
//  Created by Dana Zou on 13/12/2022.
//

import Foundation

func day9() {
    let input = day9PuzzleInput.split(separator: "\n").map({$0.split(separator: " ")})
    var instructions: [(Int, Int)] = []
    
    for line in input {
        let direction = line[0]
        let steps = Int(line[1]) ?? 0
        var coordinates: (x: Int, y: Int)
        
        switch direction {
        case "R":
            coordinates = (+1, 0)
        case "L":
            coordinates = (-1, 0)
        case "U":
            coordinates = (0, +1)
        case "D":
            coordinates = (0, -1)
        default:
            coordinates = (0,0)
        }
        
        instructions.append(contentsOf:Array(repeating: coordinates, count: steps))
    }
    
    
    var H = (x: 0,y: 0)
    var T = (x: 0,y: 0)
    var tPositions: Set<String> = ["\(T.x),\(T.y)"]
    
    for instruction in instructions {
        H = H + instruction
        
        if (H==T) || (abs(H.x - T.x) == 1 && H.y == T.y) || (abs(H.y - T.y) == 1 && H.x == T.x) || (abs(H.x - T.x) == 1 && abs(H.y - T.y) == 1) {
//            print ("H & T are touching after H moved")
            tPositions.insert("\(T.x),\(T.y)")
            continue
        }
//        print ("T needs to  move")
        let difference = (x: H.x - T.x, y: H.y - T.y)
        switch difference {
        case (2, 0), (-2, 0):
            T.x += difference.x > 0 ? 1: -1
        case (0, 2), (0, -2):
            T.y += difference.y > 0 ? 1: -1
        default:
//            print ("not in same row or column")
            T.x += difference.x > 0 ? 1: -1
            T.y += difference.y > 0 ? 1: -1
        }
        tPositions.insert("\(T.x),\(T.y)")
    }
    
//    print (tPositions.count)
    
    var longerRope = Array(repeating: (x:0, y:0), count: 10)
    var ninePositions: Set<String> = ["0,0"]
        
    for instruction in instructions {
        longerRope[0] = longerRope[0] + instruction
        
        for knot in stride(from: 1, to: longerRope.count, by: 1){
//            print (knot)
            let H = longerRope[knot - 1]
            var T = longerRope[knot]
            if (H==T) || (abs(H.x - T.x) == 1 && H.y == T.y) || (abs(H.y - T.y) == 1 && H.x == T.x) || (abs(H.x - T.x) == 1 && abs(H.y - T.y) == 1) {
    //            print ("H & T are touching after H moved")
                continue
            }
    //        print ("T needs to  move")
            let difference = (x: H.x - T.x, y: H.y - T.y)
            switch difference {
            case (2, 0), (-2, 0):
                T.x += difference.x > 0 ? 1: -1
            case (0, 2), (0, -2):
                T.y += difference.y > 0 ? 1: -1
            default:
    //            print ("not in same row or column")
                T.x += difference.x > 0 ? 1: -1
                T.y += difference.y > 0 ? 1: -1
            }
            
            longerRope[knot] = T
        }
        
        ninePositions.insert("\(longerRope[9].x),\(longerRope[9].y)")
    }
    print(ninePositions.count)
    
}

func + <N:Numeric> (x: (N, N), y: (N, N)) ->  (N, N){
    return (x.0 + y.0, x.1 + y.1)
}

/*
 2,3 3,2
 var H: (x: Int, y: Int)
 var T: (x: Int, y: Int)
 
 input parsing:
 R : x+ (+1, 0)
 L : x- (-x, 0)
 D : y- (0, -y)
 U : y+ (0, +y)
 
 to store number of unique places T has been to -> set of T coordinates
    
 for each instruction:
    H += instruction
    check position of T
        if =H, next to, above/below, or diagonal to H: no change
        continue
    check difference bt. H & T coordinates:
        |H - T| = (2, 0) -> simply need to check difference in x ≠ 0
            x(t) + sign of (H - T) * 1
        |H - T| = (0, 2) -> difference in y ≠ 0
            y(t) + sign of (H-T)*1
        else
            x(t) + sign of (H-T) * 1
            y(t) + sign of (H-T) * 1
        
        e.g.
        move horizontally: H = (3, 1); T = (1, 1) -> T needs to be (2, 1)
        move vertically: H = (2, 0), T = (2, 2) -> T needs to be (2, 1)
        move diagnoally:
 
 */

let day9DemoInput =
"""
R 4
U 4
L 3
D 1
R 4
D 1
L 5
R 2
"""

let day9DemoInputPart2 =
"""
R 5
U 8
L 8
D 3
R 17
D 10
L 25
U 20
"""

let day9PuzzleInput =
"""
L 2
D 1
L 2
U 2
R 1
D 2
U 1
R 2
U 2
L 1
D 2
L 1
D 2
L 2
U 2
D 2
L 2
R 1
U 1
D 2
U 1
L 1
U 2
D 2
L 2
D 2
L 2
R 2
D 2
U 2
R 2
U 2
R 2
U 1
R 2
D 2
R 2
D 1
U 1
L 1
U 2
R 1
D 2
U 1
L 2
D 2
U 2
L 1
R 2
D 2
U 2
D 1
L 1
U 2
D 2
L 2
D 2
R 2
L 2
R 2
L 1
U 2
R 1
D 1
L 2
U 1
R 2
U 1
D 1
U 2
R 2
U 2
R 2
D 2
U 1
D 2
R 1
U 1
D 1
R 1
U 2
L 2
U 2
R 1
D 1
R 2
D 1
L 2
U 2
R 2
L 1
R 2
D 1
U 2
D 2
L 1
U 1
R 2
D 1
U 2
L 2
U 2
D 2
L 2
D 2
R 1
L 2
U 2
R 1
D 1
L 1
D 3
U 2
D 2
R 1
L 3
R 1
U 2
R 1
L 2
U 1
L 3
R 2
U 2
R 3
U 3
L 3
U 1
D 1
R 3
L 2
U 1
R 2
U 1
D 3
U 1
R 2
L 2
D 1
L 1
R 3
U 2
L 3
R 2
D 2
L 1
U 2
R 2
U 3
L 1
R 2
L 3
U 3
L 1
U 2
R 2
U 2
D 2
L 2
U 1
D 1
U 2
D 3
R 2
L 2
U 1
R 2
D 3
U 2
L 2
U 1
R 1
L 1
D 1
L 3
R 2
D 2
L 2
D 1
U 3
D 3
U 3
L 3
R 2
L 1
U 2
R 3
U 2
R 2
U 3
D 2
U 1
L 3
U 1
L 1
D 2
L 2
R 1
L 1
D 3
L 2
D 2
R 2
L 3
R 2
L 2
U 1
L 3
U 2
R 2
D 2
U 2
L 1
D 3
R 1
U 3
D 2
U 3
L 1
D 2
R 1
U 3
R 4
L 1
U 4
R 2
D 2
U 3
D 1
L 1
D 4
L 3
D 4
L 3
D 3
U 4
L 2
D 1
U 1
R 4
D 4
L 2
R 3
U 3
D 1
L 3
D 2
L 4
D 4
R 3
D 4
U 4
R 3
L 4
U 1
L 1
R 4
D 2
R 4
U 3
D 2
R 4
U 4
D 1
U 2
D 3
U 2
L 3
R 4
L 1
U 4
D 3
L 4
R 2
U 1
R 1
D 2
L 2
U 2
L 3
R 1
L 2
D 1
R 3
L 4
U 2
R 1
U 1
R 3
L 3
D 2
U 2
L 1
R 1
L 2
D 2
L 1
R 2
L 1
U 1
R 1
L 4
R 3
U 4
R 4
L 2
R 4
L 1
U 2
R 3
L 4
U 1
R 1
D 1
U 3
L 1
D 2
U 2
D 3
R 4
U 1
R 3
D 2
U 1
D 1
U 4
R 2
D 4
L 3
R 4
U 3
D 4
L 3
U 2
D 2
L 4
D 1
L 2
R 2
U 3
R 5
L 3
U 5
L 4
U 3
D 1
U 2
D 5
L 5
D 3
R 3
D 3
U 3
D 5
U 4
D 5
L 5
R 2
D 1
R 5
U 2
L 2
U 5
L 1
R 4
U 5
R 1
D 5
R 3
U 1
R 5
D 5
L 1
D 4
R 5
L 1
D 3
U 2
D 1
U 1
D 4
L 5
D 4
R 1
L 2
U 3
L 1
U 3
L 3
U 4
L 2
R 4
D 5
U 1
L 3
U 5
R 1
D 4
U 3
L 5
U 1
L 3
D 3
R 4
L 5
U 1
L 5
U 2
D 1
R 2
L 2
D 4
L 5
D 2
R 5
L 4
D 1
R 5
U 3
R 2
D 3
L 1
D 1
L 4
U 5
L 2
D 3
R 5
U 2
L 1
U 5
D 4
U 1
R 2
L 1
U 2
L 3
D 1
U 3
L 1
R 5
U 3
R 3
U 2
R 5
L 5
U 1
L 5
D 5
R 1
U 4
L 6
D 4
U 2
L 1
U 5
L 1
R 6
D 3
U 5
R 3
U 5
D 3
R 3
L 2
U 2
L 6
R 3
U 5
D 5
L 6
R 1
L 1
D 5
U 1
R 5
L 4
R 1
L 5
D 1
L 2
U 4
L 5
U 4
R 2
L 1
D 2
R 4
U 5
D 4
U 2
L 3
R 2
L 1
D 3
U 1
L 2
U 6
L 2
U 3
R 2
D 1
L 4
R 5
L 3
U 5
L 6
R 3
U 4
L 2
R 3
U 3
L 1
D 5
R 5
D 5
U 5
L 6
R 5
L 4
U 2
R 5
U 1
D 2
R 2
D 1
U 6
L 5
D 1
R 6
U 5
R 3
D 1
R 4
D 2
U 5
L 5
R 2
D 2
R 1
U 4
R 3
U 4
L 6
D 3
R 4
L 4
U 5
D 1
U 1
D 5
U 4
L 5
D 1
R 1
U 5
D 7
R 5
D 2
R 2
D 7
L 1
R 2
D 2
R 7
U 4
D 3
U 3
D 3
L 4
D 2
R 6
L 7
D 6
U 4
D 1
L 4
U 3
D 1
U 1
L 6
D 4
L 7
U 6
R 4
L 7
U 2
D 5
L 7
U 3
R 3
U 6
R 7
U 4
R 4
L 4
U 6
R 6
D 7
U 4
D 5
L 4
U 7
R 7
D 3
L 5
U 7
D 3
U 1
D 7
R 7
L 4
U 7
D 1
R 3
D 3
U 4
R 2
U 4
R 4
U 7
R 4
L 2
U 4
R 7
L 6
U 1
D 2
U 3
D 1
L 6
D 5
L 7
R 6
D 6
L 4
D 4
U 3
D 3
L 7
R 7
L 7
D 6
U 5
D 7
U 7
D 4
U 7
L 6
U 3
D 3
R 3
D 4
L 2
U 2
R 4
D 5
R 7
U 7
L 2
U 1
D 4
U 3
L 4
U 6
D 4
L 4
U 6
D 5
L 1
R 4
L 2
D 6
R 4
D 3
R 3
L 1
D 2
U 3
L 1
U 7
L 3
R 5
U 1
L 4
D 8
L 7
D 8
L 4
U 6
R 2
D 4
R 3
D 3
R 6
L 8
R 6
D 4
L 5
R 5
D 3
U 6
D 5
U 3
L 1
D 4
U 2
R 5
D 8
L 3
D 2
U 8
L 2
D 6
L 6
D 2
R 8
L 3
D 8
U 5
L 1
R 1
D 3
L 5
R 7
U 4
D 1
L 2
D 2
L 5
D 7
R 7
U 5
L 5
D 6
L 1
U 3
L 4
R 6
D 7
U 1
R 1
L 8
U 3
D 4
R 2
D 8
L 1
R 8
U 7
L 6
U 4
D 4
L 2
D 8
U 8
R 4
U 3
D 7
R 6
D 8
R 5
L 4
D 4
L 8
D 3
R 4
L 6
U 8
D 1
L 3
R 7
L 4
U 3
D 2
U 4
R 2
D 1
U 5
L 7
U 3
L 8
U 1
L 4
R 4
U 1
R 2
L 4
U 8
D 7
L 8
D 4
U 3
D 5
U 2
D 2
R 1
U 6
L 3
R 8
U 2
R 2
D 7
L 3
U 3
R 8
U 4
R 7
U 5
R 7
D 4
R 4
D 7
U 5
L 2
D 2
L 3
U 2
D 2
L 6
R 6
L 5
U 9
D 3
L 4
U 3
L 7
D 6
L 6
U 7
R 8
U 8
L 9
D 7
L 9
D 1
L 1
R 7
U 7
L 5
D 9
R 8
L 1
R 5
L 3
D 3
U 1
R 8
U 6
D 3
R 5
U 4
L 1
R 3
L 1
U 7
D 3
R 3
D 8
R 5
U 2
R 5
D 1
L 5
D 5
R 6
L 1
D 9
L 2
D 9
U 4
L 1
D 8
L 2
U 2
D 7
U 9
L 8
D 1
R 2
L 3
D 4
L 6
U 5
D 5
U 1
L 5
U 7
D 7
L 9
D 8
R 8
U 1
D 9
L 8
U 9
D 2
R 6
L 3
U 6
R 3
U 5
D 8
L 5
D 9
U 5
R 4
U 5
R 1
L 5
U 4
L 4
D 1
L 1
D 7
R 7
U 2
L 5
R 9
U 6
D 2
U 6
R 1
D 8
U 6
D 3
U 10
D 5
L 6
R 6
L 5
D 7
U 3
L 4
D 3
R 10
U 8
D 3
L 1
R 9
L 2
R 9
U 10
D 3
U 6
R 8
D 4
R 7
L 1
U 8
D 7
R 2
U 8
D 8
L 7
U 6
R 4
D 4
R 1
U 4
R 2
L 5
D 8
U 4
L 8
U 1
D 1
L 6
U 10
R 10
L 9
U 6
L 2
U 2
L 1
U 1
L 6
D 4
U 2
D 6
U 4
D 10
R 8
D 8
R 8
D 2
U 6
L 9
D 2
L 4
D 3
L 4
R 3
U 2
D 1
U 1
R 1
D 7
U 3
R 10
D 1
U 6
R 2
D 1
R 11
D 1
R 7
U 4
D 8
U 7
R 11
L 10
R 7
L 3
D 1
U 2
L 9
R 5
L 6
R 6
U 2
R 3
U 8
D 6
U 7
L 6
D 11
L 10
D 3
R 3
U 11
D 7
U 2
R 1
L 6
R 2
L 2
D 3
L 8
R 6
D 10
U 6
D 11
L 7
R 11
D 2
L 9
U 7
D 5
U 5
D 11
L 4
R 8
D 9
L 4
U 1
R 6
D 11
U 6
L 5
U 3
L 11
D 8
U 2
D 9
R 2
L 10
U 8
D 7
U 3
L 7
D 10
L 7
D 10
R 1
D 10
L 7
U 3
L 1
R 9
D 5
L 11
R 3
L 9
R 8
D 2
U 5
L 4
D 2
U 7
R 9
U 9
L 2
D 1
R 6
L 5
D 8
U 8
R 6
U 3
L 7
U 4
R 7
L 1
D 7
R 2
U 10
D 3
U 4
R 8
D 5
L 8
D 5
U 8
R 6
U 2
L 8
U 7
L 12
D 11
L 8
D 12
R 10
L 10
U 7
D 2
R 6
L 11
U 4
D 8
U 11
L 1
D 12
L 3
R 10
D 2
R 4
L 1
D 2
R 2
L 12
U 3
L 10
U 4
D 10
U 8
L 5
R 5
L 12
U 1
D 10
U 2
D 12
U 12
R 2
U 1
R 4
D 8
L 9
R 7
L 5
D 5
U 5
L 7
U 2
L 7
U 6
L 12
U 11
R 10
U 3
L 4
D 6
R 11
U 3
R 5
L 2
U 9
R 2
L 10
D 3
U 12
R 9
D 2
U 12
L 1
U 9
D 9
L 2
D 4
R 11
D 2
L 2
U 12
R 10
D 6
U 11
R 9
D 12
L 2
U 11
L 5
U 6
R 7
U 9
L 10
R 1
L 3
R 3
D 2
R 5
L 12
R 1
U 3
D 1
L 3
U 5
D 9
L 10
U 9
D 11
L 12
U 7
R 12
L 3
D 2
R 10
U 13
R 6
L 5
U 12
L 2
R 13
U 8
D 3
R 8
L 3
R 3
D 9
R 6
D 10
R 2
U 12
R 1
D 2
R 12
D 7
U 3
L 13
R 11
D 4
U 9
L 12
U 3
L 7
D 2
L 12
D 12
R 10
D 11
U 7
R 4
U 10
R 11
L 11
R 7
D 13
U 11
R 11
U 3
L 6
U 9
D 1
U 3
D 13
R 10
U 3
R 3
D 7
U 6
L 11
R 10
D 9
R 12
D 5
R 7
D 3
R 5
L 1
R 10
L 8
D 12
R 2
U 9
R 13
U 13
R 12
L 8
D 13
R 1
L 6
U 10
D 2
U 7
L 6
U 6
R 7
U 12
R 10
U 12
L 5
D 4
L 8
U 12
L 13
D 6
R 1
D 2
L 10
U 13
R 12
D 4
L 8
R 11
D 5
U 11
D 7
L 1
U 12
L 6
U 12
D 7
L 8
R 13
D 12
R 11
D 2
U 14
L 5
D 2
L 6
U 14
L 1
U 2
R 12
L 9
U 14
D 2
U 5
D 3
U 11
R 7
U 5
R 13
D 5
L 2
R 12
U 6
D 1
U 14
D 3
L 13
U 2
D 2
U 1
D 12
U 12
D 4
U 2
D 2
R 8
U 3
D 13
R 2
D 6
U 11
D 12
L 3
U 7
D 14
L 4
U 11
L 4
D 2
R 13
L 6
U 9
R 14
U 10
D 11
L 12
R 4
D 9
R 11
D 8
R 7
D 12
R 7
U 4
L 8
D 7
R 9
U 7
R 13
U 3
R 11
D 7
U 3
R 9
L 8
U 2
D 5
U 8
D 1
L 8
U 12
R 13
L 7
R 8
L 10
R 2
D 13
L 12
R 2
L 7
R 9
U 7
D 8
L 10
D 12
U 14
R 5
D 11
L 12
U 4
L 1
D 5
U 6
D 9
U 8
R 8
D 11
R 6
U 5
R 1
L 15
D 5
U 1
R 6
D 8
R 15
U 15
R 3
D 14
L 1
D 2
L 13
R 13
U 5
L 6
D 10
R 7
U 4
D 15
R 14
D 12
U 4
D 12
U 12
L 12
R 8
L 15
D 1
R 6
U 5
D 7
R 8
U 7
D 6
U 1
D 1
L 2
R 3
D 13
U 4
D 4
U 6
L 13
D 10
R 14
L 10
D 15
U 12
R 10
D 13
L 1
R 13
D 10
U 2
R 5
D 3
U 13
D 1
R 15
U 4
L 8
D 6
L 13
R 4
L 11
D 15
U 11
L 13
D 6
L 15
U 9
L 1
R 11
U 14
R 6
L 12
R 5
U 5
L 11
D 13
U 3
L 4
R 1
D 11
L 8
D 9
R 12
D 14
U 15
D 14
U 14
L 14
U 4
L 13
D 8
U 13
R 7
L 11
D 15
L 5
U 7
R 10
D 13
R 15
D 2
R 2
L 10
R 4
U 7
D 15
L 6
D 9
L 16
R 10
U 3
R 6
L 8
U 15
R 4
D 1
U 8
L 14
R 6
U 8
L 10
D 4
U 9
R 4
D 1
U 4
L 2
R 16
L 6
D 16
U 14
R 10
L 14
U 3
R 7
U 6
R 13
L 5
R 15
L 7
R 3
D 16
L 11
U 12
L 11
D 8
R 7
L 11
R 5
U 8
R 2
U 10
R 11
U 1
D 14
U 14
R 4
L 6
D 4
U 16
D 2
R 12
L 6
U 7
L 7
D 8
R 4
D 8
U 11
L 13
U 9
D 8
L 8
U 16
D 3
L 1
R 13
U 2
L 12
R 2
L 3
D 11
R 4
L 12
R 12
U 4
D 8
L 12
U 16
L 9
R 5
U 13
L 1
R 10
L 15
U 2
R 8
L 8
D 11
R 7
L 7
R 2
L 13
D 11
L 11
D 7
L 8
U 11
R 7
L 15
D 5
L 13
R 8
D 4
R 6
L 1
U 10
L 17
U 16
R 6
D 17
U 14
L 13
D 3
U 11
R 10
D 3
L 15
U 13
R 7
L 12
U 3
L 7
R 13
L 10
R 13
L 10
D 1
R 11
L 12
U 6
R 2
L 4
R 11
U 15
D 6
L 15
R 7
U 16
D 9
L 12
D 14
L 5
D 15
L 17
R 7
U 17
L 10
D 7
L 2
D 1
U 4
D 17
U 17
D 9
L 14
D 16
L 2
D 8
L 5
D 8
R 6
L 15
R 17
D 14
U 17
L 17
U 12
R 10
L 12
U 16
R 10
D 5
R 2
U 11
R 6
L 2
R 2
D 17
U 17
D 12
U 5
L 14
U 2
R 2
D 3
U 4
R 5
U 17
L 9
U 4
R 2
L 5
U 8
L 2
D 5
R 14
U 15
R 14
D 3
U 16
L 3
D 6
U 3
L 2
R 3
L 1
R 6
L 14
U 10
L 13
R 8
U 3
D 7
U 9
D 2
L 14
D 5
R 7
D 8
L 18
R 13
U 14
D 6
R 10
L 10
U 2
L 11
R 12
U 6
R 16
L 10
U 7
R 12
L 15
D 2
U 16
L 4
D 2
L 1
R 8
D 7
L 11
R 4
D 13
U 13
R 1
D 15
L 12
R 5
D 10
U 8
R 14
L 10
U 9
R 7
U 13
L 5
U 9
L 15
R 4
D 13
R 12
D 5
R 18
L 3
D 13
R 17
D 9
L 8
D 3
L 5
D 8
U 10
D 8
L 2
U 10
R 6
D 13
L 17
R 17
D 16
R 14
L 6
U 17
R 9
D 11
L 7
U 16
R 16
L 1
R 17
D 9
L 6
D 16
R 12
L 7
U 5
D 14
R 8
U 12
L 12
R 8
U 17
L 13
D 17
L 15
R 7
U 11
L 10
R 8
U 14
R 6
U 11
D 17
U 13
L 12
U 11
L 16
D 13
U 11
L 2
R 11
L 13
U 12
R 15
U 17
L 10
U 17
D 2
R 1
L 10
R 10
U 14
L 12
U 8
R 4
L 12
U 13
L 2
R 9
D 14
U 17
L 16
D 9
R 3
L 17
U 8
R 16
D 11
L 1
U 15
L 19
R 8
D 11
R 14
D 19
R 12
U 3
L 9
U 2
L 6
D 6
U 16
D 4
L 1
D 10
R 8
U 17
D 2
R 6
D 19
U 6
R 9
U 17
D 7
L 15
D 13
L 17
U 1
R 17
D 3
L 15
U 16
D 13
R 13
D 14
L 12
D 4
L 16
U 15
R 8
U 19
D 15
L 5
R 15
L 19
U 6
D 6
U 10
L 1
R 19
L 1
R 6
L 1
U 17
R 10
U 4
D 5
R 6
U 3
R 12
U 13
D 7
R 15
U 5
R 2
U 10
L 13
U 3
D 5
R 19
U 9
D 5
L 3
D 17
L 16
D 7
L 16
R 11
D 3
U 1
R 2
D 2
L 4
R 4
U 17
D 4
L 10
U 11
D 13
"""
